<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="egovframework.com.main.mapper.MainMapper">
	
	<select id="selectDummyList" resultType="Map">
		select * from out_user;
	</select>
	
	<select id="getDashboardCount" resultType="egovframework.com.main.vo.MainVo">
		SELECT * 
		  FROM (
		  		(SELECT COUNT(*) AS memberCount FROM user) a,
				<![CDATA[(SELECT COUNT(*) AS daysMemberCount FROM user where reg_date >= DATE_ADD(NOW(), INTERVAL -7 DAY)) b,]]>
				(SELECT COUNT(*) AS suggestionCount FROM suggestion_main) c,
				<![CDATA[(SELECT COUNT(*) AS daysSuggestionCount FROM suggestion_main  where create_date >= DATE_ADD(NOW(), INTERVAL -7 DAY)) d,]]>
				(SELECT COUNT(*) AS surveyCount FROM survey_participation) e,
				<![CDATA[(SELECT COUNT(*) AS daysSurveyCount FROM survey_participation  where create_date >= DATE_ADD(NOW(), INTERVAL -7 DAY)) f,]]>
				(SELECT COUNT(*) AS contestCount FROM contest_user) g,
				<![CDATA[(SELECT COUNT(*) AS daysContestCount FROM contest_user WHERE create_date >= DATE_ADD(NOW(), INTERVAL -7 DAY)) h,]]>
				(SELECT COUNT(*) AS opinionCount FROM (
													   SELECT opinion_idx FROM suggestion_opinion 
													   UNION 
													   SELECT opinion_idx FROM survey_opinion
													  ) oc
				) i,
				(SELECT COUNT(*) AS daysOpinionCount FROM (
														   <![CDATA[
														   SELECT opinion_idx FROM suggestion_opinion WHERE create_date >= DATE_ADD(NOW(), INTERVAL -7 DAY) 
														   UNION
														   SELECT  opinion_idx FROM survey_opinion WHERE create_date >= DATE_ADD(NOW(), INTERVAL -7 DAY)
														   ]]>
														  ) 7oc
				) j,
				(SELECT COUNT(*) AS daysVisitorCount FROM (
														   SELECT COUNT(*) 
														     FROM user_log
														    WHERE requestURI = '/main/main.do'
														      <![CDATA[
														      AND reg_date >= DATE_FORMAT(CURDATE(), '%Y-%m-%d 00:00:00')
														      ]]> 
														    GROUP BY ip
														   ) ul 
				) k ,
				(SELECT COUNT(*) AS visitorCount FROM (
											  		   SELECT *
													     FROM (
													  		   SELECT ip 
													  		   		, DATE_FORMAT(reg_date, '%Y-%m-%d')	AS reg_date 
													  		     FROM daul.user_log 
													  		    WHERE requestURI = '/main/main.do'
													  	      ) a
													    GROUP BY reg_date, ip
											  	      ) a
			    ) l,
			    <![CDATA[(SELECT COUNT(*) AS daysChatbotCount FROM (SELECT * FROM daul.chatbot_log WHERE create_date >= DATE_FORMAT(CURDATE(), '%Y-%m-%d 00:00:00')) cl) m ,]]>
			    (SELECT COUNT(*) AS chatbotCount FROM daul.chatbot_log) n
			   )
	</select>
	
	<select id="selectMainSuggestionList" resultType="egovframework.com.suggestion.vo.SuggestionVo">
		SELECT @rownum:=@rownum+1 AS num
		  		     , sub.suggestion_idx
		  		     , sub.title
		  		     , sub.content
		  		     , sub.like_count
		  		     , sub.create_user
		  		     , DATE_FORMAT(sub.create_date, '%Y-%m-%d %H:%i:%s') as create_date
		  		     , sub.opinion_cnt
		  		     , sub.like_per
		  		     , sub.name
		  		     , sub.auth_type
				  FROM (
				  		SELECT sm.*
				  		     , CASE WHEN (like_count / 50 * 100) >= 100 THEN 100 ELSE (like_count / 50 * 100) END AS like_per
				  		  FROM (
								SELECT s.suggestion_idx
									 , s.title
									 , s.content
									 , (SELECT COUNT(*) FROM daul.user_like where parent_idx = s.suggestion_idx) AS like_count
									 , s.create_user
									 , s.create_date
									 , (SELECT count(*) FROM suggestion_opinion a WHERE a.suggestion_idx = s.suggestion_idx) AS opinion_cnt
									 , b.name
									 ,b.auth_type
								  FROM suggestion_main s
								  LEFT JOIN daul.user b ON s.create_user = b.user_id 
								 WHERE del_chk != 'Y'
								  ) sm
						) sub, (SELECT @rownum:=0) TMP
				   WHERE 1=1 
				   AND create_date >= date_add(now(), interval -30 day)
				   ORDER BY num DESC
	</select>
	
	<select id="selectMainContestList" resultType="egovframework.com.contest.vo.ContestVo">	
		SELECT *
			  FROM (
			SELECT @rownum:=@rownum+1 AS num,
			       (
			        SELECT count(*)
			          FROM contest_user
			         WHERE admin_contest_idx = a.admin_contest_idx
			       ) AS user_contest_cnt,
					admin_contest_idx,
					create_user,
					title,
					content,
					DATE_FORMAT(contest_s_date, '%Y-%m-%d %H:%i:%s') AS contest_s_date,
					DATE_FORMAT(contest_e_date, '%Y-%m-%d %H:%i:%s') AS contest_e_date,
					DATE_FORMAT(submit_s_date, '%Y-%m-%d %H:%i:%s') AS submit_s_date,
					DATE_FORMAT(submit_e_date, '%Y-%m-%d %H:%i:%s') AS submit_e_date,
					DATE_FORMAT(create_date, '%Y-%m-%d %H:%i:%s') AS create_date,
							<![CDATA[
							case when contest_e_date < SYSDATE() then '공모종료'
								 when contest_s_date > SYSDATE() then '공모전'
				 	             when contest_e_date > SYSDATE() and SYSDATE() > contest_s_date then '공모진행중'
				 	        ]]>
					end as ing,
					name
					FROM daul.contest_admin a
			   LEFT JOIN daul.user b
				      ON a.create_user = b.user_id 
						, (SELECT @rownum:=0) TMP
						   WHERE del_chk != 'Y'
			               ORDER BY create_date ASC
			) sub
			LIMIT 0,5
	</select>
		
	<select id="selectMainSurveyList" resultType="egovframework.com.survey.vo.SurveyVo">		
		SELECT @rownum:=@rownum+1 					AS num
				 , a.survey_idx
				 , (
				    SELECT count(*) 
				      FROM survey_opinion 
				     WHERE survey_idx = a.survey_idx
				   ) AS opinion_count
				 , (
				   SELECT  count(DISTINCT  participation_user)
				      FROM survey_participation 
				     WHERE survey_idx = a.survey_idx
				   ) AS participation_count
				 , a.title
				 , a.content
				 , DATE_FORMAT(a.s_date, '%Y-%m-%d %H:%i:%s') 		AS s_date
				 , DATE_FORMAT(a.e_date, '%Y-%m-%d %H:%i:%s') 		AS e_date
				 , a.survey_type
				 , a.create_user
				 , DATE_FORMAT(a.create_date, '%Y-%m-%d %H:%i:%s') AS create_date
				 , b.name
				 <![CDATA[
				 , case when e_date < SYSDATE() then '투표완료'
					  when s_date > SYSDATE() then '투표전'
	 	              when e_date > SYSDATE() and SYSDATE() > s_date then '투표중'
	 	         ]]>
	             end as ing	
			  FROM daul.survey_main a
			   LEFT JOIN daul.user b
			    ON a.create_user = b.user_id 
			     , (SELECT @rownum:=0) TMP
			  WHERE del_chk != 'Y'
			  ORDER BY create_date desc
			  LIMIT 0,5
		</select>	  
			  
	<select id="selectVisitorCnt" resultType="egovframework.com.main.vo.MainVo">
		SELECT a.reg_date
		     , COUNT(a.ip) AS visitor_cnt
		  FROM (
		  		SELECT a.date AS reg_date
				     , ul.ip
				  FROM (
				  		SELECT a.date 
						  FROM (
						    	SELECT CURDATE() - INTERVAL (a.a + (10 * b.a) + (100 * c.a) + (1000 * d.a) ) DAY as date
							      FROM (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS a
						    CROSS JOIN (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS b
						    CROSS JOIN (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS c
						    CROSS JOIN (SELECT 0 AS a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) AS d
							   ) a
						 WHERE a.date BETWEEN #{search_s_date} AND #{search_e_date}
						 ORDER BY a.date
				  	   ) a
				  LEFT JOIN (
				  			 SELECT ip
					  			  , DATE_FORMAT(reg_date, '%Y-%m-%d') AS reg_date
					  		   FROM daul.user_log
					  		  WHERE requestURI = '/main/main.do'
				  			) ul ON a.date = ul.reg_date
				 GROUP BY a.date, ul.ip
				 ORDER BY a.date, ul.ip
		  	   ) a
		 GROUP BY a.reg_date
	</select>
	
	
	<select id="selectMileageRank" resultType="egovframework.com.main.vo.MainVo" >
		SELECT b.user_id,b.phone,b.name, sum(a.mileage_value) as total_mileage
	      ,(SELECT count(*) FROM suggestion_main WHERE create_user = b.user_id and del_chk = 'N') as suggestion_count
	      ,(SELECT count(*) FROM survey_participation WHERE participation_user = b.user_id group by survey_idx ) as survey_count
	      ,(SELECT count(*) FROM contest_user WHERE create_user = b.user_id and del_chk = 'N') as contest_count
	      <![CDATA[
	      ,(SELECT sum(mileage_value) FROM user_mileage WHERE user_id = b.phone and reg_date  >= date_add(now(), interval -#{days} day) ) as daysMileage
		  ]]>
		FROM user_mileage a
		JOIN user b
		ON a.user_id = b.phone
		GROUP BY b.name
	</select>
	
	<select id="selectKeywordList" resultType="map">
		SELECT keyword
		     , SUM(keyword_cnt) AS keyword_cnt
		  FROM daul.keyword_frequency
		 GROUP BY keyword
		 ORDER BY SUM(keyword_cnt) DESC
		        , keyword
	</select>
</mapper>