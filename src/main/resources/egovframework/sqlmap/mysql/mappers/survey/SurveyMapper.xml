<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="egovframework.com.survey.mapper.SurveyMapper">
	
	<select id="selectSurveyList" resultType="Map">
		SELECT 
			survey_idx,
			title,
			content,
			DATE_FORMAT(s_date, '%Y-%m-%d') as s_date,
			DATE_FORMAT(e_date, '%Y-%m-%d') as e_date,
			survey_type,
			create_user,
			DATE_FORMAT(create_date, '%Y-%m-%d') as create_date	
		FROM daul.survey_main
		WHERE del_chk = 'N'
		ORDER BY survey_idx DESC
	</select>
	
	<select id="selectSurveyIdx" resultType="String">
		SELECT CONCAT('SV-',LPAD(count(*)+1,'6','0')) as 'survey_idx'
		FROM survey_main 
	</select>
	
	<insert id = "registSurvey">
		INSERT INTO survey_main
		(
			survey_idx,
			title,
			content,
			survey_type,
			s_date,
			e_date,
			create_user,
			create_date,
			del_chk
		)
		VALUES
		(
			#{survey_idx},
			#{title},
			#{content},
			#{survey_type},
			#{s_date},
			#{e_date},
			#{create_user},
			sysdate(),
			'N'
		)
	
	</insert>
		
	<insert id = "insertFile">
		INSERT INTO survey_attach
        (
            survey_idx,
            org_file_name,
            save_file_name,
            file_size,
            create_user,
            del_chk,
            create_date,
            attach_type
        )
        VALUES
        (
            #{ idx},
            #{ org_file_name},
            #{ save_file_name},
            #{ file_size},
            #{ create_user},
            'N',
            SYSDATE(),
            #{ attach_type}           
        )
	</insert>
	
	<insert id = "registQuestion" parameterType = "hashmap">
		INSERT INTO survey_question
		(
			question_idx,
			survey_idx,
			question_content
		)
		VALUES
		(
			#{question_idx},
			#{survey_idx},
			#{question_content}
		)
		
	</insert>
	
	<select id="selectSurveyDetail" resultType="egovframework.com.survey.vo.SurveyVo">
		SELECT
			survey_idx,
			title,
			content,
			DATE_FORMAT(s_date, '%Y-%m-%d') as s_date,
			DATE_FORMAT(e_date, '%Y-%m-%d') as e_date,
			survey_type
		FROM daul.survey_main
		WHERE survey_idx = #{survey_idx}
	
	</select>
	
	<select id="selectSurveyQuestionList" resultType="Map">
		SELECT 
			question_idx,
			question_content,
			q_seq
		FROM daul.survey_question
		WHERE survey_idx = #{survey_idx}
	</select>
	
	<update id="updateSurvey">
		UPDATE daul.survey_main
		   SET title = #{title},
		       content = #{content},
		       survey_type = #{survey_type},
		       s_date = #{s_date},
		       e_date = #{e_date},
		       update_user = #{update_user},
		       update_date = sysdate()
		 WHERE survey_idx = #{survey_idx}
	</update>
	
	<delete id = "deleteSurveyQuestion">
		DELETE FROM daul.survey_question
		WHERE survey_idx =  #{survey_idx}
	</delete>
	
	<select id = "selectSurveyResult"  resultType="Map">
		SELECT a.question_idx, a.question_content, count(b.question_idx) as question_count
		FROM survey_question a
		LEFT JOIN survey_participation b 
		ON a.question_idx = b.question_idx
		WHERE a.survey_idx = #{survey_idx}
		GROUP BY a.question_content,a.question_idx 
		ORDER BY question_idx
	</select>
	
	<select id = "selectParticipation" resultType="Map">
		SELECT a.participation_user, b.name, b.email, b.phone, a.create_date, right(question_idx,1) as choose from survey_participation a
		LEFT JOIN user b
		ON a.participation_user = b.user_id
		WHERE a.survey_idx  = #{survey_idx};
	</select>
	
	<delete id = "deleteParticipation">
		DELETE  
		  FROM survey_participation 
		 WHERE survey_idx  = #{survey_idx}
		   AND q_seq NOT IN ( 
		   		<foreach collection="q_seqList" item="item" separator=",">
          			  #{item.value}
        		</foreach> 
        	);
	</delete>
	
	<select id="selectSurveyFile" resultType="hashmap">
		SELECT *
		  FROM daul.survey_attach
		 WHERE del_chk != 'Y'
		   AND survey_idx = #{idx}
		   <if test="attach_type != null and attach_type != ''">
		   AND attach_type = #{attach_type}
		   </if>
	</select>
	
	<update id="deleteFile">
		UPDATE daul.survey_attach
		SET del_chk = 'Y'
		WHERE survey_idx = #{idx}
		AND del_chk != 'Y'
		<if test="attach_type != null and attach_type != ''">
		AND attach_type = #{attach_type}
		</if>
	</update>
	
	<select id="selectSurveyOpinionList" resultType="egovframework.com.survey.vo.SurveyOpinionVo">
		SELECT so.*
		     , u.auth_type 
		  FROM daul.survey_opinion so
		  LEFT JOIN daul.user u ON so.create_user = u.user_id 
		 <!-- WHERE so.del_chk != 'Y' --> 
		 WHERE so.survey_idx = #{survey_idx}
		 ORDER BY so.survey_ref
		        , so.survey_step
	</select>
	
	<select id="selectParentSurveyOpinion" resultType="egovframework.com.survey.vo.SurveyOpinionVo">
		SELECT survey_ref
		     , survey_indent
		     , survey_step
		  FROM daul.survey_opinion
		 WHERE opinion_idx = #{opinion_idx}
	</select>
	
	<update id="updateChildSurveyOpinion">
		UPDATE daul.survey_opinion
		   SET survey_step = survey_step + 1
		 WHERE survey_ref = #{survey_ref}
		   <![CDATA[
		   AND survey_step > #{survey_step}
		   ]]>
	</update>
	
	<select id="selectSurveyOpinionIdx" resultType="String">
		SELECT CONCAT('SV-OP-',LPAD(count(*)+1,'6','0')) as 'opinion_idx'
		FROM daul.survey_opinion 
	</select>
	
	<insert id="insertSurveyOpinion">
		INSERT INTO daul.survey_opinion
		     (
		       opinion_idx
             , survey_idx
             , opinion_content
             , create_user
             , create_date
             , del_chk
             , survey_ref
             , survey_indent
             , survey_step
		     )
		VALUES
		     (
		       #{opinion_idx}
             , #{survey_idx}
             , #{opinion_content}
             , #{create_user}
             , SYSDATE()
             , 'N'
             , #{survey_ref}
             , #{survey_indent}
             , #{survey_step}
		     )
	</insert>
	
	<update id="updateSurveyOpinion">
		UPDATE daul.survey_opinion
		   SET update_user = #{update_user}
		     , update_date = SYSDATE()
		     <if test="opinion_content != null and opinion_content != ''">
		     , opinion_content = #{opinion_content}
		     </if>
		 WHERE opinion_idx = #{opinion_idx}
	</update>
	
	<update id="deleteSurveyOpinion">
		UPDATE daul.survey_opinion
		   SET del_chk = 'Y'
		 WHERE opinion_idx = #{opinion_idx}
	</update>
</mapper>