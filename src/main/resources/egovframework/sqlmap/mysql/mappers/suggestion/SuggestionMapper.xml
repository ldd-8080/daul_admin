<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="egovframework.com.suggestion.mapper.SuggestionMapper">
	
	<select id="selectSuggestionIdx" resultType="String">
		SELECT CONCAT('SG-',LPAD(count(*)+1,'6','0')) as 'suggestion_idx'
		FROM suggestion_main 
	</select>
	
	<insert id="insertSuggestion">
		INSERT INTO daul.suggestion_main
		     (
		       suggestion_idx
		     , title
		     , content
		     , create_user
		     , create_date
		     , del_chk
		     )
		VALUES 
			 (
			   #{suggestion_idx}
		     , #{title}
		     , #{content}
		     , #{create_user}
		     , SYSDATE()
		     , 'N'
			 )
	</insert>
	
	<insert id="insertFile">
		INSERT INTO suggestion_attach
		     (
		       suggestion_idx
		     , org_file_name
		     , save_file_name
		     , file_size
		     , create_user
		     , del_chk
		     , create_date
		     , attach_type
		     )
		VALUES
		     (
		       #{idx}
		     , #{org_file_name}
		     , #{save_file_name}
		     , #{file_size}
		     , #{create_user}
		     , 'N'
		     , SYSDATE()
		     , #{attach_type}
		     )
	</insert>
	
<select id="selectSuggestionList" resultType="egovframework.com.suggestion.vo.SuggestionVo">
	SELECT * 
	  FROM (
			SELECT 
		       @rownum:=@rownum+1 AS num,
		       c.suggestion_idx,
		       c.title, 
		       c.content, 
		       c.create_user,
		       DATE_FORMAT(c.create_date, '%Y-%m-%d') as create_date,
			   (
				     SELECT count(*) FROM suggestion_opinion a
					 LEFT JOIN `user` b 
					 ON a.create_user = b.user_id
					 WHERE b.auth_type ='public' AND a.suggestion_idx = c.suggestion_idx
				) AS public_cnt,
			   (
				     SELECT count(*) FROM suggestion_opinion a
					 LEFT JOIN `user` b 
					 ON a.create_user = b.user_id
					 WHERE b.auth_type ='pro' AND a.suggestion_idx = c.suggestion_idx
				) AS pro_cnt,
			   (
				     SELECT count(*) FROM suggestion_opinion a
					 LEFT JOIN `user` b 
					 ON a.create_user = b.user_id
					 WHERE b.auth_type ='admin' AND a.suggestion_idx = c.suggestion_idx
				) AS admin_cnt
		FROM suggestion_main c, (SELECT @rownum:=0) TMP   
		WHERE c.del_chk != 'Y'
		   <if test="search_type == 'title'">
		   		AND c.title like concat('%', #{search}, '%')
		   </if>
		   <if test="search_type == 'content'">
		   		AND c.content like concat('%', #{search}, '%')
		   </if>
		   <if test="search_type == 'create_user'">
		   		AND c.create_user like concat('%', #{search}, '%')
		   </if>
		   <if test="search_s_date != null and search_s_date != ''">
			   <![CDATA[
			   AND c.create_date >= date_format(concat(#{search_s_date}, ' 00:00:00'), '%Y-%m-%d %H:%i:%s')
			   ]]>
		   </if>
		   <if test="search_e_date != null and search_e_date != ''">
			   <![CDATA[
			   AND c.create_date <= date_format(concat(#{search_e_date}, ' 23:59:59'), '%Y-%m-%d %H:%i:%s')
			   ]]>
		   </if>
		  
	) sub
	ORDER BY sub.num DESC; 
</select> 
	
	<!-- <select id="selectSuggestionList" resultType="egovframework.com.suggestion.vo.SuggestionVo">
		SELECT * 
		  FROM (
			SELECT @rownum:=@rownum+1 AS num
			     , sgst.*
			  FROM (
					SELECT sgst.suggestion_idx
					     , SUM(pro_cnt)			AS pro_cnt
					     , SUM(public_cnt)		AS public_cnt
					     , sgst.title
					     , sgst.content
					     , sgst.create_user
					     , sgst.create_date
					  FROM (
					  		SELECT sm.suggestion_idx
					  		     , sm.title
					  		     , sm.content 
					  		     , sm.create_user 
					  		     , DATE_FORMAT(sm.create_date, '%Y-%m-%d') as create_date 
					  		     , so.opinion_idx 
					  		     , so.create_user AS opinion_create_user
					  		     , u.auth_type 
					  		     , (CASE WHEN u.auth_type = 'pro' THEN 1 ELSE 0 END) AS pro_cnt
							     , (CASE WHEN u.auth_type = 'public' THEN 1 ELSE 0 END) AS public_cnt
							     , (CASE WHEN u.auth_type = 'admin' THEN 1 ELSE 0 END) AS admin_cnt
							  FROM daul.suggestion_main sm
							  LEFT JOIN daul.suggestion_opinion so ON sm.suggestion_idx = so.suggestion_idx 
							  LEFT JOIN daul.user u ON so.create_user = u.user_id
							 WHERE sm.del_chk != 'Y'
							   <if test="search_type == 'title'">
							   AND title like concat('%', #{search}, '%')
							   </if>
							   <if test="search_type == 'content'">
							   AND content like concat('%', #{search}, '%')
							   </if>
							   <if test="search_type == 'create_user'">
							   AND create_user like concat('%', #{search}, '%')
							   </if>
							   <if test="search_s_date != null and search_s_date != ''">
							   <![CDATA[
							   AND sm.create_date >= date_format(concat(#{search_s_date}, ' 00:00:00'), '%Y-%m-%d %H:%i:%s')
							   ]]>
							   </if>
							   <if test="search_e_date != null and search_e_date != ''">
							   <![CDATA[
							   AND sm.create_date <= date_format(concat(#{search_e_date}, ' 23:59:59'), '%Y-%m-%d %H:%i:%s')
							   ]]>
							   </if>
							 ORDER BY sm.suggestion_idx
					  	   ) sgst
					 GROUP BY sgst.suggestion_idx
					 ORDER BY sgst.create_date ASC
			  	   ) sgst
			  	 , (SELECT @rownum:=0) TMP  
		) sub
	ORDER BY sub.num DESC; 
	</select> -->
	
	<select id="selectSuggestion" resultType="egovframework.com.suggestion.vo.SuggestionVo">
		SELECT *
		  FROM daul.suggestion_main
		 WHERE del_chk != 'Y'
		   AND suggestion_idx = #{suggestion_idx}
	</select>
	
	<select id="selectSuggestionFile" resultType="hashmap">
		SELECT *
		  FROM daul.suggestion_attach
		 WHERE del_chk != 'Y'
		   AND suggestion_idx = #{idx}
		   <if test="attach_type != null and attach_type != ''">
		   AND attach_type = #{attach_type}
		   </if>
	</select>
	
	<update id="deleteFile">
		UPDATE daul.suggestion_attach
		   SET del_chk = 'Y'
		 WHERE save_file_name = #{save_file_name}
		   AND del_chk != 'Y'
		   <if test="attach_type != null and attach_type != ''">
		   AND attach_type = #{attach_type}
		   </if>
	</update>
	
	<update id="updateSuggestion">
		UPDATE daul.suggestion_main
		   SET update_user = #{update_user}
		     , update_date = SYSDATE()
		     <if test="title != null and title != ''">
		     , title = #{title}
		     </if>
		     <if test="content != null and content != ''">
		     , content = #{content}
		     </if>
		 WHERE suggestion_idx = #{suggestion_idx}
	</update>
	
	<update id="deleteSuggestion">
		UPDATE daul.suggestion_main
		   SET del_chk = 'Y'
		     , update_user = #{update_user}
		     , update_date = SYSDATE()
		 WHERE suggestion_idx = #{suggestion_idx}
	</update>
	
	<select id="selectSuggestionOpinionIdx" resultType="String">
		SELECT CONCAT('SG-OP-',LPAD(count(*)+1,'6','0')) as 'opinion_idx'
		FROM daul.suggestion_opinion 
	</select>
	
	<insert id="insertSuggestionOpinion">
		INSERT INTO daul.suggestion_opinion
		     (
		       opinion_idx
             , suggestion_idx
             , opinion_content
             , create_user
             , create_date
             , del_chk
             , suggestion_ref
             , suggestion_indent
             , suggestion_step
		     )
		VALUES
		     (
		       #{opinion_idx}
             , #{suggestion_idx}
             , #{opinion_content}
             , #{create_user}
             , SYSDATE()
             , 'N'
             , #{suggestion_ref}
             , #{suggestion_indent}
             , #{suggestion_step}
		     )
	</insert>
	
	<select id="selectSuggestionOpinionList" resultType="egovframework.com.suggestion.vo.SuggestionOpinionVo">
		SELECT @rownum:=@rownum+1 AS num
			 , so.*
		     , u.auth_type 
		  FROM daul.suggestion_opinion so
		  LEFT JOIN daul.user u ON so.create_user = u.user_id 
		  INNER JOIN (SELECT @rownum:=0) TMP
		 <!-- WHERE so.del_chk != 'Y' --> 
		 WHERE so.suggestion_idx = #{suggestion_idx}
		 ORDER BY so.suggestion_ref
		        , so.suggestion_step
	</select>
	
	<select id="selectParentSuggestionOpinion" resultType="egovframework.com.suggestion.vo.SuggestionOpinionVo">
		SELECT suggestion_ref
		     , suggestion_indent
		     , suggestion_step
		  FROM daul.suggestion_opinion
		 WHERE opinion_idx = #{opinion_idx}
	</select>
	
	<update id="updateChildSuggestionOpinion">
		UPDATE daul.suggestion_opinion
		   SET suggestion_step = suggestion_step + 1
		 WHERE suggestion_ref = #{suggestion_ref}
		   <![CDATA[
		   AND suggestion_step > #{suggestion_step}
		   ]]>
	</update>
	
	<update id="updateSuggestionOpinion">
		UPDATE daul.suggestion_opinion
		   SET update_user = #{update_user}
		     , update_date = SYSDATE()
		     <if test="opinion_content != null and opinion_content != ''">
		     , opinion_content = #{opinion_content}
		     </if>
		 WHERE opinion_idx = #{opinion_idx}
	</update>
	
	<update id="deleteSuggestionOpinion">
		UPDATE daul.suggestion_opinion
		   SET del_chk = 'Y'
		 WHERE opinion_idx = #{opinion_idx}
	</update>
	
	<update id="deleteAllFile">
		UPDATE daul.suggestion_attach
		   SET del_chk = 'Y'
		 WHERE suggestion_idx = #{suggestion_idx}
		   AND del_chk != 'Y'
	</update>
	
	<update id="deleteAllOpinion">
		UPDATE daul.suggestion_opinion
		   SET del_chk = 'Y'
		     , update_user = #{update_user}
		     , update_date = SYSDATE()
		 WHERE suggestion_idx = #{suggestion_idx}
		   AND del_chk != 'Y'
	</update>
	
	<select id="selectDownloadFile" resultType="egovframework.com.cmmn.util.FileVo">
		SELECT org_file_name
		     , save_file_name
		  FROM daul.suggestion_attach
		 WHERE save_file_name = #{save_file_name}
	</select>
</mapper>