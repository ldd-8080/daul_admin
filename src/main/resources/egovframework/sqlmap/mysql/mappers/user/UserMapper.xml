<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="egovframework.com.user.mapper.UserMapper">
	
	<update id="updateUser">
		UPDATE daul.user
		   SET user_id = #{user_id}
		     <if test="pw != null and pw != ''">
		     , pw = #{pw}
		     </if>
		     <if test="auth_type != null and auth_type != ''">
		     , auth_type = #{auth_type}
		     </if>
		     <if test="name != null and name != ''">
		     , name = #{name}
		     </if>
		     <if test="phone != null and phone != ''">
		     , phone = #{phone}
		     </if>
		     <if test="email != null and email != ''">
		     , email = #{email}
		     </if>
		     <if test="email_chk != null and email_chk != ''">
		     , email_chk = #{email_chk}
		     </if>
		     <if test="talk_chk != null and talk_chk != ''">
		     , talk_chk = #{talk_chk}
		     </if>
		     <if test="sms_chk != null and sms_chk != ''">
		     , sms_chk = #{sms_chk}
		     </if>
		 WHERE user_id = #{user_id}
	</update>
	
	<insert id="createUser">
		INSERT INTO daul.user
			   (
			     user_id
			   , name
			   , pw
			   , email
			   , phone
			   , channel
			   , reg_date
			   <if test="email_chk != null and email_chk != ''">
			   , email_chk 
			   </if>
			   <if test="talk_chk != null and talk_chk != ''">
			   , talk_chk 
			   </if>
			   <if test="sms_chk != null and sms_chk != ''">
			   , sms_chk 
			   </if>
			   , auth_type
			   )
		VALUES (
				 #{user_id}
			   , #{name}
			   , #{pw}
			   , #{email}
			   , #{phone}
			   , #{channel}
			   , SYSDATE()
			   <if test="email_chk != null and email_chk != ''">
			   , #{email_chk} 
			   </if>
			   <if test="talk_chk != null and talk_chk != ''">
			   , #{talk_chk} 
			   </if>
			   <if test="sms_chk != null and sms_chk != ''">
			   , #{sms_chk} 
			   </if>
			   , #{auth_type}
			   )
	</insert>
	
	<select id="selectUser" resultType="egovframework.com.user.vo.UserVo">
		SELECT user_id
		     , name
		     , pw
		     , email
		     , phone
		     , channel
		     , DATE_FORMAT(reg_date, '%Y-%m-%d')		as reg_date
     		 , DATE_FORMAT(last_login_date, '%Y-%m-%d') as last_login_date
		     , email_chk
		     , talk_chk
		     , sms_chk
		     , auth_type
		  FROM daul.user
		 WHERE user_id = #{user_id}
	</select>
	
	<delete id="deleteUser">
		DELETE FROM daul.user
		 WHERE user_id = #{user_id}
	</delete>
	
	<select id="selectUserList" resultType="egovframework.com.user.vo.UserVo">
	SELECT * 
	  FROM (
		SELECT @rownum:=@rownum+1 AS num
			 , user_id
		     , name
		     , pw
		     , email
		     , phone
		     , channel
		     , DATE_FORMAT(reg_date, '%Y-%m-%d') as reg_date
		     , DATE_FORMAT(last_login_date, '%Y-%m-%d') as last_login_date
		     , email_chk
		     , talk_chk
		     , sms_chk
		     , auth_type
		  FROM daul.user
		     , (SELECT @rownum:=0) TMP
		 WHERE 1=1
		   <choose>
		   <when test="auth_type != null and 'admin'.equals(auth_type)">
		   AND auth_type = #{auth_type}
		   </when>
		   <otherwise>
		   AND auth_type != 'admin'
		   </otherwise>
		   </choose>
		) sub
	ORDER BY sub.num DESC;		   
	</select>
	
	<update id="updateUserPw">
		UPDATE daul.user
		   SET pw = #{pw}
		 WHERE user_id = #{user_id}
	</update>
	
	<select id="selectUserIdCheck" resultType="int">
		SELECT COUNT(*)
		  FROM daul.user
		 WHERE user_id = #{user_id}
	</select>
</mapper>